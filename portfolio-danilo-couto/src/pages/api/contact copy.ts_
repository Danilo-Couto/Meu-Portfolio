import nodemailer from 'nodemailer';
import { google } from 'googleapis';
import { Options } from 'nodemailer/lib/mailer';
import { Request, Response } from 'express';

require('dotenv').config();

const { OAuth2 } = google.auth;

const user = process.env.GMAIL;
const clientId = process.env.CLIENT_ID;
const clientSecret = process.env.CLIENT_SECRET;
const refreshToken = process.env.REFRESH_TOKEN;

const createTransporter = async () => {
  const oauth2Client = new OAuth2(
    clientId,
    clientSecret,
    'https://developers.google.com/oauthplayground'
  );

  oauth2Client.setCredentials({
    refresh_token: refreshToken
  });

  const accessToken = await new Promise((resolve, reject) => {
    oauth2Client.getAccessToken((err, token) => {
      if (err) {
        console.log('accessToken:', err);
        reject(err);
      }
      console.log('accessToken:', token);
      resolve(token);
    });
  });

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      type: 'OAuth2',
      user,
      clientId,
      clientSecret,
      refreshToken,
      accessToken
    }
  });

  return transporter;
};

const sendEmail = async (emailOptions: Options) => {
  const emailTransporter = await createTransporter();
  await emailTransporter.sendMail(emailOptions);
};

export default async (req: Request, res: Response) => {
  const { senderMail, name, text } = req.body;

  const message = {
    from: `${name} <${senderMail}>`,
    to: user,
    subject: `Nova mensagem de contato - ${name}`,
    text
    // replyTo: from
  };

  if (senderMail === '' || text === '') {
    res.status(403).send();
    return;
  }

  try {
    const mailerRes = await sendEmail({
      subject: message.subject,
      text,
      to: message.to,
      from: message.from
    });

    res.send(mailerRes);
  } catch (error) {
    console.log(error);
    res.send(error);
  }
};
